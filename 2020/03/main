#!/usr/bin/env ruby

require 'benchmark'
require 'pathname'

module PartOne
  module_function

  # Efficient for large files, yielding one line at a time
  #
  # Complexity:
  #   - Time:  O(n)
  #   - Space: O(1)
  #
  def call(file)
    IO.foreach(file).with_index.reduce(0) do |res, (lne, idx)|
      lne[idx * 3 % lne.strip.size] == '#' ? res += 1 : res
    end
  end

  # Complexity:
  #   - Time:  O(n)
  #   - Space: O(n)
  #
  def alt(file)
    file
      .readlines
      .map(&:strip)
      .each_with_index
      .count { |line, idx| line[idx * 3 % line.size] == '#' }
  end
end

module PartTwo
  module_function

  def call(file)
  end
end

Benchmark.bm do |x|
  x.report("Part One       : ") { p PartOne.(Pathname(ARGV.first)) }
  x.report("Part One (alt) : ") { p PartOne.alt(Pathname(ARGV.first)) }

  x.report("Part Two       : ") { p PartTwo.(Pathname(ARGV.first)) }
end
